// deno-lint-ignore-file no-explicit-any
export const MockResponser = {
  send_accepted: (message: string, data?: any) => ({ message, data }),
  send_badGateway: (message: string, data?: any) => ({ message, data }),
  send_badRequest: (message: string, data?: any) => ({ message, data }),
  send_conflict: (message: string, data?: any) => ({ message, data }),
  send_continue: (message: string, data?: any) => ({ message, data }),
  send_created: (message: string, data?: any) => ({ message, data }),
  send_expectationFailed: (message: string, data?: any) => ({ message, data }),
  send_failedDependency: (message: string, data?: any) => ({ message, data }),
  send_forbidden: (message: string, data?: any) => ({ message, data }),
  send_gatewayTimeout: (message: string, data?: any) => ({ message, data }),
  send_gone: (message: string, data?: any) => ({ message, data }),
  send_httpVersionNotSupported: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_imATeapot: (message: string, data?: any) => ({ message, data }),
  send_insufficientSpaceOnResource: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_insufficientStorage: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_internalServerError: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_lengthRequired: (message: string, data?: any) => ({ message, data }),
  send_locked: (message: string, data?: any) => ({ message, data }),
  send_methodFailure: (message: string, data?: any) => ({ message, data }),
  send_methodNotAllowed: (message: string, data?: any) => ({ message, data }),
  send_movedPermanently: (message: string, data?: any) => ({ message, data }),
  send_movedTemporarily: (message: string, data?: any) => ({ message, data }),
  send_multiStatus: (message: string, data?: any) => ({ message, data }),
  send_multipleChoices: (message: string, data?: any) => ({ message, data }),
  send_networkAuthenticationRequired: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_noContent: (message: string, data?: any) => ({ message, data }),
  send_nonAuthoritativeInformation: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_notAcceptable: (message: string, data?: any) => ({ message, data }),
  send_notFound: (message: string, data?: any) => ({ message, data }),
  send_notImplemented: (message: string, data?: any) => ({ message, data }),
  send_notModified: (message: string, data?: any) => ({ message, data }),
  send_ok: (message: string, data?: any) => ({ message, data }),
  send_partialContent: (message: string, data?: any) => ({ message, data }),
  send_paymentRequired: (message: string, data?: any) => ({ message, data }),
  send_permanentRedirect: (message: string, data?: any) => ({ message, data }),
  send_preconditionFailed: (message: string, data?: any) => ({ message, data }),
  send_preconditionRequired: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_processing: (message: string, data?: any) => ({ message, data }),
  send_proxyAuthenticationRequired: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_requestHeaderFieldsTooLarge: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_requestTimeout: (message: string, data?: any) => ({ message, data }),
  send_requestTooLong: (message: string, data?: any) => ({ message, data }),
  send_requestUriTooLong: (message: string, data?: any) => ({ message, data }),
  send_requestedRangeNotSatisfiable: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_resetContent: (message: string, data?: any) => ({ message, data }),
  send_seeOther: (message: string, data?: any) => ({ message, data }),
  send_serviceUnavailable: (message: string, data?: any) => ({ message, data }),
  send_switchingProtocols: (message: string, data?: any) => ({ message, data }),
  send_temporaryRedirect: (message: string, data?: any) => ({ message, data }),
  send_tooManyRequests: (message: string, data?: any) => ({ message, data }),
  send_unauthorized: (message: string, data?: any) => ({ message, data }),
  send_unprocessableEntity: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_unsupportedMediaType: (message: string, data?: any) => ({
    message,
    data,
  }),
  send_useProxy: (message: string, data?: any) => ({ message, data }),
};
